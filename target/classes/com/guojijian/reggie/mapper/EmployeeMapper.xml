<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.guojijian.reggie.mapper.EmployeeMapper">

    <resultMap id="baseResultMap" type="com.guojijian.reggie.pojo.Employee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="id_number" property="idNumber" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_user" property="createUser" jdbcType="BIGINT"/>
        <result column="update_user" property="updateUser" jdbcType="BIGINT"/>
    </resultMap>

    <!--Employee selectEmployeeByUserName(Employee employee);-->
    <select id="selectEmployeeByUserName" resultMap="baseResultMap">
        SELECT id,name,username,password,phone,sex,id_number,status,create_time,update_time,create_user,update_user
        FROM employee
        WHERE username = #{username}
    </select>

    <!--int insertEmployee(Employee employee);-->
    <insert id="insertEmployee">
        INSERT INTO employee(name,username,password,phone,sex,id_number,create_time,update_time,create_user,update_user)
        VALUES(#{name},#{username},#{password},#{phone},#{sex},#{idNumber},#{createTime},#{updateTime},#{createUser},#{updateUser})
    </insert>

    <!--List<Employee> selectEmployeeForPageByCondition(Map<String,Object> map);-->
    <select id="selectEmployeeForPageByCondition" resultMap="baseResultMap">
        SELECT id,name,username,password,phone,sex,id_number,status,create_time,update_time,create_user,update_user
        FROM employee
        <where>
            <if test="name!=null and name!=''">
                name LIKE '%' #{name} '%'
            </if>
        </where>
    </select>

    <!--int updateEmployee(Employee employee);-->
    <update id="updateEmployee">
        UPDATE employee
        <set>
            <if test="name!=null">
                name=#{name},
            </if>
            <if test="username!=null">
                username=#{username},
            </if>
            <if test="phone!=null">
                phone=#{phone},
            </if>
            <if test="sex!=null">
                sex=#{sex},
            </if>
            <if test="idNumber!=null">
                id_number=#{idNumber},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="updateTime!=null">
                update_time=#{updateTime},
            </if>
            <if test="updateUser!=null">
                update_user=#{updateUser}
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <!--Employee selectEmployeeById(Long id);-->
    <select id="selectEmployeeById" resultMap="baseResultMap">
        SELECT id,name,username,password,phone,sex,id_number,status,create_time,update_time,create_user,update_user
        FROM employee
        WHERE id=#{id}
    </select>


</mapper>